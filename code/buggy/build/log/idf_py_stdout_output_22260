OWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:ï¿½ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7172
load:0x40078000,len:15532
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (29) boot: ESP-IDF v5.2-dirty 2nd stage bootloader[0m
[0;32mI (29) boot: compile time Apr 17 2024 19:06:56[0m
[0;32mI (29) boot: Multicore bootloader[0m
[0;32mI (34) boot: chip revision: v3.0[0m
[0;32mI (38) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (42) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (47) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (51) boot: Enabling RNG early entropy source...[0m
[0;32mI (57) boot: Partition Table:[0m
[0;32mI (60) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (68) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (75) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (83) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (90) boot: End of partition table[0m
[0;32mI (94) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=23d88h (146824) map[0m
[0;32mI (153) esp_image: segment 1: paddr=00033db0 vaddr=3ffb0000 size=03bech ( 15340) load[0m
[0;32mI (159) esp_image: segment 2: paddr=000379a4 vaddr=40080000 size=08674h ( 34420) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=7b61ch (505372) map[0m
[0;32mI (346) esp_image: segment 4: paddr=000bb644 vaddr=40088674 size=0e0c4h ( 57540) load[0m
[0;32mI (380) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (380) boot: Disabling RNG early entropy source...[0m
[0;32mI (392) cpu_start: Multicore app[0m
[0;32mI (401) cpu_start: Pro cpu start user code[0m
[0;32mI (401) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (401) cpu_start: Application information:[0m
[0;32mI (404) cpu_start: Project name:     main[0m
[0;32mI (408) cpu_start: App version:      b6da4d5-dirty[0m
[0;32mI (414) cpu_start: Compile time:     Apr 17 2024 21:43:16[0m
[0;32mI (420) cpu_start: ELF file SHA256:  61acc57e9...[0m
[0;32mI (425) cpu_start: ESP-IDF:          v5.2-dirty[0m
[0;32mI (431) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (435) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (440) cpu_start: Chip rev:         v3.0[0m
[0;32mI (445) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (452) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (458) heap_init: At 3FFB7CF8 len 00028308 (160 KiB): DRAM[0m
[0;32mI (464) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (471) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (477) heap_init: At 40096738 len 000098C8 (38 KiB): IRAM[0m
[0;32mI (485) spi_flash: detected chip: generic[0m
[0;32mI (488) spi_flash: flash io: dio[0m
[0;33mW (492) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;33mW (505) i2c: This driver is an old driver, please migrate your application code to adapt `driver/i2c_master.h`[0m
[0;33mW (516) ADC: legacy driver is deprecated, please migrate to `esp_adc/adc_oneshot.h`[0m
[0;32mI (525) main_task: Started on CPU0[0m
[0;32mI (535) main_task: Calling app_main()[0m
I (585) wifi:wifi driver task: 3ffbfde8, prio:23, stack:6656, core=0
I (605) wifi:wifi firmware version: cc1dd81
I (605) wifi:wifi certification version: v7.0
I (605) wifi:config NVS flash: enabled
I (605) wifi:config nano formating: disabled
I (615) wifi:Init data frame dynamic rx buffer num: 32
I (615) wifi:Init static rx mgmt buffer num: 5
I (625) wifi:Init management short buffer num: 32
I (625) wifi:Init dynamic tx buffer num: 32
I (635) wifi:Init static rx buffer size: 1600
I (635) wifi:Init static rx buffer num: 10
I (635) wifi:Init dynamic rx buffer num: 32
[0;32mI (645) wifi_init: rx ba win: 6[0m
[0;32mI (645) wifi_init: tcpip mbox: 32[0m
[0;32mI (645) wifi_init: udp mbox: 6[0m
[0;32mI (655) wifi_init: tcp mbox: 6[0m
[0;32mI (655) wifi_init: tcp tx win: 5760[0m
[0;32mI (665) wifi_init: tcp rx win: 5760[0m
[0;32mI (665) wifi_init: tcp mss: 1440[0m
[0;32mI (665) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (675) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (685) phy_init: phy_version 4791,2c4672b,Dec 20 2023,16:06:06[0m
I (765) wifi:mode : sta (44:17:93:5d:58:ac)
I (765) wifi:enable tsf
[0;32mI (765) example: wifi_init_sta finished.[0m
I (775) wifi:new:<5,1>, old:<1,0>, ap:<255,255>, sta:<5,1>, prof:1
I (785) wifi:state: init -> auth (b0)
I (785) wifi:state: auth -> assoc (0)
I (795) wifi:state: assoc -> run (10)
I (815) wifi:<ba-add>idx:0 (ifx:0, 30:23:03:c7:9f:8c), tid:0, ssn:0, winSize:64
I (835) wifi:connected with Group_5, aid = 5, channel 5, 40U, bssid = 30:23:03:c7:9f:8c
I (835) wifi:security: WPA2-PSK, phy: bgn, rssi: -46
I (845) wifi:pm start, type: 1

I (845) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us
I (845) wifi:AP's beacon interval = 102400 us, DTIM period = 1
[0;32mI (5355) esp_netif_handlers: sta ip: 192.168.1.13, mask: 255.255.255.0, gw: 192.168.1.1[0m
[0;32mI (5355) example: got ip:192.168.1.13[0m
[0;32mI (5355) example: connected to ap SSID:Group_5 password:smartsys[0m
[0;32mI (5365) example: Create timer and operator[0m
[0;32mI (5365) example: Connect timer and operator[0m
[0;32mI (5375) example: Create comparator and generator from the operator[0m
[0;32mI (5375) gpio: GPIO[4]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
[0;32mI (5385) gpio: GPIO[26]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
[0;32mI (5395) example: Set generator action on timer and compare event[0m
[0;32mI (5405) example: Enable and start timer[0m
[0;32mI (9915) example: Message sent to server[0m
[0;32mI (12915) main_task: Returned from app_main()[0m
3
[0;32mI (18365) example: Received message from server: 3 or 3[0m
[0;32mI (18365) example: Message sent to server[0m
1
[0;32mI (32505) example: Received message from server: 1 or 1[0m
[0;32mI (32505) example: Message sent to server[0m
5
[0;32mI (33925) example: Received message from server: 5 or 5[0m
[0;32mI (33935) example: Message sent to server[0m
1
[0;32mI (34445) example: Received message from server: 1 or 1[0m
[0;32mI (34445) example: Message sent to server[0m
1
[0;32mI (34955) example: Received message from server: 1 or 1[0m
[0;32mI (34955) example: Message sent to server[0m
3
[0;32mI (35265) example: Received message from server: 3 or 3[0m
[0;32mI (35265) example: Message sent to server[0m
4
[0;32mI (35365) example: Received message from server: 4 or 4[0m
[0;32mI (35365) example: Message sent to server[0m
3
[0;32mI (35565) example: Received message from server: 3 or 3[0m
[0;32mI (35565) example: Message sent to server[0m
4
[0;32mI (35675) example: Received message from server: 4 or 4[0m
[0;32mI (35675) example: Message sent to server[0m
3
[0;32mI (35775) example: Received message from server: 3 or 3[0m
[0;32mI (35775) example: Message sent to server[0m
4
[0;32mI (35875) example: Received message from server: 4 or 4[0m
[0;32mI (35885) example: Message sent to server[0m
1
[0;32mI (63525) example: Received message from server: 1 or 1[0m
[0;32mI (63525) example: Message sent to server[0m
3
[0;32mI (63625) example: Received message from server: 3 or 3[0m
[0;32mI (63625) example: Message sent to server[0m
5
[0;32mI (63725) example: Received message from server: 5 or 5[0m
[0;32mI (63725) example: Message sent to server[0m
3
[0;32mI (63935) example: Received message from server: 3 or 3[0m
[0;32mI (63935) example: Message sent to server[0m
4
[0;32mI (64035) example: Received message from server: 4 or 4[0m
[0;32mI (64035) example: Message sent to server[0m
3
[0;32mI (64245) example: Received message from server: 3 or 3[0m
[0;32mI (64245) example: Message sent to server[0m
5
[0;32mI (64445) example: Received message from server: 5 or 5[0m
[0;32mI (64445) example: Message sent to server[0m
1
[0;32mI (65165) example: Received message from server: 1 or 1[0m
[0;32mI (65165) example: Message sent to server[0m
4
[0;32mI (65565) example: Received message from server: 4 or 4[0m
[0;32mI (65575) example: Message sent to server[0m
3
[0;32mI (65775) example: Received message from server: 3 or 3[0m
[0;32mI (65775) example: Message sent to server[0m
5
[0;32mI (65885) example: Received message from server: 5 or 5[0m
[0;32mI (65885) example: Message sent to server[0m
4
[0;32mI (66085) example: Received message from server: 4 or 4[0m
[0;32mI (66085) example: Message sent to server[0m
3
[0;32mI (66185) example: Received message from server: 3 or 3[0m
[0;32mI (66185) example: Message sent to server[0m
4
[0;32mI (66285) example: Received message from server: 4 or 4[0m
[0;32mI (66285) example: Message sent to server[0m
3
[0;32mI (66495) example: Received message from server: 3 or 3[0m
[0;32mI (66495) example: Message sent to server[0m
4
[0;32mI (66595) example: Received message from server: 4 or 4[0m
[0;32mI (66595) example: Message sent to server[0m
1
[0;32mI (77345) example: Received message from server: 1 or 1[0m
[0;32mI (77355) example: Message sent to server[0m
1
[0;32mI (77855) example: Received message from server: 1 or 1[0m
[0;32mI (77865) example: Message sent to server[0m
1
[0;32mI (77965) example: Received message from server: 1 or 1[0m
[0;32mI (77965) example: Message sent to server[0m
1
[0;32mI (78065) example: Received message from server: 1 or 1[0m
[0;32mI (78065) example: Message sent to server[0m
1
[0;32mI (78165) example: Received message from server: 1 or -1[0m
[0;32mI (78165) example: Message sent to server[0m
1
[0;32mI (78265) example: Received message from server: 1 or 1[0m
[0;32mI (78265) example: Message sent to server[0m
1
[0;32mI (78365) example: Received message from server: 1 or -1[0m
[0;32mI (78365) example: Message sent to server[0m
1
[0;32mI (78575) example: Received message from server: 1 or 1[0m
[0;32mI (78585) example: Message sent to server[0m
1
[0;32mI (78985) example: Received message from server: 1 or 1[0m
[0;32mI (78995) example: Message sent to server[0m
1
[0;32mI (79295) example: Received message from server: 1 or 1[0m
[0;32mI (79295) example: Message sent to server[0m
1
[0;32mI (79605) example: Received message from server: 1 or 1[0m
[0;32mI (79605) example: Message sent to server[0m
1
[0;32mI (79905) example: Received message from server: 1 or 1[0m
[0;32mI (79915) example: Message sent to server[0m
1
[0;32mI (80215) example: Received message from server: 1 or 1[0m
[0;32mI (80215) example: Message sent to server[0m
1
[0;32mI (80525) example: Received message from server: 1 or 1[0m
[0;32mI (80525) example: Message sent to server[0m
1
[0;32mI (80825) example: Received message from server: 1 or 1[0m
[0;32mI (80835) example: Message sent to server[0m
1
[0;32mI (81135) example: Received message from server: 1 or 1[0m
[0;32mI (81135) example: Message sent to server[0m
1
[0;32mI (84515) example: Received message from server: 1 or 1[0m
[0;32mI (84515) example: Message sent to server[0m
12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7172
load:0x40078000,len:15532
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (29) boot: ESP-IDF v5.2-dirty 2nd stage bootloader[0m
[0;32mI (29) boot: compile time Apr 17 2024 19:06:56[0m
[0;32mI (29) boot: Multicore bootloader[0m
[0;32mI (34) boot: chip revision: v3.0[0m
[0;32mI (38) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (42) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (47) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (51) boot: Enabling RNG early entropy source...[0m
[0;32mI (57) boot: Partition Table:[0m
[0;32mI (60) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (68) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (75) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (83) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (90) boot: End of partition table[0m
[0;32mI (94) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=23d88h (146824) map[0m
[0;32mI (153) esp_image: segment 1: paddr=00033db0 vaddr=3ffb0000 size=03bech ( 15340) load[0m
[0;32mI (159) esp_image: segment 2: paddr=000379a4 vaddr=40080000 size=08674h ( 34420) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=7b61ch (505372) map[0m
[0;32mI (346) esp_image: segment 4: paddr=000bb644 vaddr=40088674 size=0e0c4h ( 57540) load[0m
[0;32mI (380) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (380) boot: Disabling RNG early entropy source...[0m
[0;32mI (392) cpu_start: Multicore app[0m
[0;32mI (401) cpu_start: Pro cpu start user code[0m
[0;32mI (401) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (401) cpu_start: Application information:[0m
[0;32mI (404) cpu_start: Project name:     main[0m
[0;32mI (408) cpu_start: App version:      b6da4d5-dirty[0m
[0;32mI (414) cpu_start: Compile time:     Apr 17 2024 21:43:16[0m
[0;32mI (420) cpu_start: ELF file SHA256:  61acc57e9...[0m
[0;32mI (425) cpu_start: ESP-IDF:          v5.2-dirty[0m
[0;32mI (431) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (435) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (440) cpu_start: Chip rev:         v3.0[0m
[0;32mI (445) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (452) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (458) heap_init: At 3FFB7CF8 len 00028308 (160 KiB): DRAM[0m
[0;32mI (464) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (471) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (477) heap_init: At 40096738 len 000098C8 (38 KiB): IRAM[0m
[0;32mI (485) spi_flash: detected chip: generic[0m
[0;32mI (488) spi_flash: flash io: dio[0m
[0;33mW (492) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;33mW (505) i2c: This driver is an old driver, please migrate your application code to adapt `driver/i2c_master.h`[0m
[0;33mW (516) ADC: legacy driver is deprecated, please migrate to `esp_adc/adc_oneshot.h`[0m
[0;32mI (525) main_task: Started on CPU0[0m
[0;32mI (535) main_task: Calling app_main()[0m
I (585) wifi:wifi driver task: 3ffbfde8, prio:23, stack:6656, core=0
I (605) wifi:wifi firmware version: cc1dd81
I (605) wifi:wifi certification version: v7.0
I (605) wifi:config NVS flash: enabled
I (605) wifi:config nano formating: disabled
I (615) wifi:Init data frame dynamic rx buffer num: 32
I (615) wifi:Init static rx mgmt buffer num: 5
I (625) wifi:Init management short buffer num: 32
I (625) wifi:Init dynamic tx buffer num: 32
I (635) wifi:Init static rx buffer size: 1600
I (635) wifi:Init static rx buffer num: 10
I (635) wifi:Init dynamic rx buffer num: 32
[0;32mI (645) wifi_init: rx ba win: 6[0m
[0;32mI (645) wifi_init: tcpip mbox: 32[0m
[0;32mI (645) wifi_init: udp mbox: 6[0m
[0;32mI (655) wifi_init: tcp mbox: 6[0m
[0;32mI (655) wifi_init: tcp tx win: 5760[0m
[0;32mI (665) wifi_init: tcp rx win: 5760[0m
[0;32mI (665) wifi_init: tcp mss: 1440[0m
[0;32mI (665) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (675) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (685) phy_init: phy_version 4791,2c4672b,Dec 20 2023,16:06:06[0m
I (765) wifi:mode : sta (44:17:93:5d:58:ac)
I (765) wifi:enable tsf
[0;32mI (765) example: wifi_init_sta finished.[0m
I (775) wifi:new:<5,1>, old:<1,0>, ap:<255,255>, sta:<5,1>, prof:1
I (785) wifi:state: init -> auth (b0)
I (785) wifi:state: auth -> assoc (0)
I (795) wifi:state: assoc -> run (10)
I (795) wifi:<ba-add>idx:0 (ifx:0, 30:23:03:c7:9f:8c), tid:0, ssn:0, winSize:64
I (825) wifi:connected with Group_5, aid = 5, channel 5, 40U, bssid = 30:23:03:c7:9f:8c
I (825) wifi:security: WPA2-PSK, phy: bgn, rssi: -42
I (825) wifi:pm start, type: 1

I (825) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us
I (895) wifi:AP's beacon interval = 102400 us, DTIM period = 1
[0;32mI (2335) esp_netif_handlers: sta ip: 192.168.1.13, mask: 255.255.255.0, gw: 192.168.1.1[0m
[0;32mI (2335) example: got ip:192.168.1.13[0m
[0;32mI (2335) example: connected to ap SSID:Group_5 password:smartsys[0m
[0;32mI (2345) example: Create timer and operator[0m
[0;32mI (2345) example: Connect timer and operator[0m
[0;32mI (2355) example: Create comparator and generator from the operator[0m
[0;32mI (2355) gpio: GPIO[4]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
[0;32mI (2365) gpio: GPIO[26]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
[0;32mI (2375) example: Set generator action on timer and compare event[0m
[0;32mI (2385) example: Enable and start timer[0m
[0;32mI (6895) example: Message sent to server[0m
[0;32mI (9895) main_task: Returned from app_main()[0m
3
[0;32mI (16055) example: Received message from server: 3 or 3[0m
[0;32mI (16055) example: Message sent to server[0m
3
[0;32mI (16975) example: Received message from server: 3 or 3[0m
[0;32mI (16985) example: Message sent to server[0m
4
[0;32mI (17695) example: Received message from server: 4 or 4[0m
[0;32mI (17695) example: Message sent to server[0m
1
[0;32mI (18205) example: Received message from server: 1 or 1[0m
[0;32mI (18215) example: Message sent to server[0m
5
[0;32mI (18615) example: Received message from server: 5 or 5[0m
[0;32mI (18615) example: Message sent to server[0m
1
[0;32mI (18925) example: Received message from server: 1 or 1[0m
[0;32mI (18925) example: Message sent to server[0m
5
[0;32mI (19025) example: Received message from server: 5 or 5[0m
[0;32mI (19025) example: Message sent to server[0m
12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7172
load:0x40078000,len:15532
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (29) boot: ESP-IDF v5.2-dirty 2nd stage bootloader[0m
[0;32mI (29) boot: compile time Apr 17 2024 19:06:56[0m
[0;32mI (29) boot: Multicore bootloader[0m
[0;32mI (34) boot: chip revision: v3.0[0m
[0;32mI (38) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (42) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (47) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (51) boot: Enabling RNG early entropy source...[0m
[0;32mI (57) boot: Partition Table:[0m
[0;32mI (60) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (68) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (75) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (83) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (90) boot: End of partition table[0m
[0;32mI (94) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=23d88h (146824) map[0m
[0;32mI (153) esp_image: segment 1: paddr=00033db0 vaddr=3ffb0000 size=03bech ( 15340) load[0m
[0;32mI (159) esp_image: segment 2: paddr=000379a4 vaddr=40080000 size=08674h ( 34420) load[0m
[0;32mI (173) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=7b61ch (505372) map[0m
[0;32mI (346) esp_image: segment 4: paddr=000bb644 vaddr=40088674 size=0e0c4h ( 57540) load[0m
[0;32mI (380) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (380) boot: Disabling RNG early entropy source...[0m
[0;32mI (392) cpu_start: Multicore app[0m
[0;32mI (401) cpu_start: Pro cpu start user code[0m
[0;32mI (401) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (401) cpu_start: Application information:[0m
[0;32mI (404) cpu_start: Project name:     main[0m
[0;32mI (408) cpu_start: App version:      b6da4d5-dirty[0m
[0;32mI (414) cpu_start: Compile time:     Apr 17 2024 21:43:16[0m
[0;32mI (420) cpu_start: ELF file SHA256:  61acc57e9...[0m
[0;32mI (425) cpu_start: ESP-IDF:          v5.2-dirty[0m
[0;32mI (431) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (435) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (440) cpu_start: Chip rev:         v3.0[0m
[0;32mI (445) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (452) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (458) heap_init: At 3FFB7CF8 len 00028308 (160 KiB): DRAM[0m
[0;32mI (464) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (471) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (477) heap_init: At 40096738 len 000098C8 (38 KiB): IRAM[0m
[0;32mI (485) spi_flash: detected chip: generic[0m
[0;32mI (488) spi_flash: flash io: dio[0m
[0;33mW (492) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;33mW (505) i2c: This driver is an old driver, please migrate your application code to adapt `driver/i2c_master.h`[0m
[0;33mW (516) ADC: legacy driver is deprecated, please migrate to `esp_adc/adc_oneshot.h`[0m
[0;32mI (525) main_task: Started on CPU0[0m
[0;32mI (535) main_task: Calling app_main()[0m
I (585) wifi:wifi driver task: 3ffbfde8, prio:23, stack:6656, core=0
I (605) wifi:wifi firmware version: cc1dd81
I (605) wifi:wifi certification version: v7.0
I (605) wifi:config NVS flash: enabled
I (605) wifi:config nano formating: disabled
I (615) wifi:Init data frame dynamic rx buffer num: 32
I (615) wifi:Init static rx mgmt buffer num: 5
I (625) wifi:Init management short buffer num: 32
I (625) wifi:Init dynamic tx buffer num: 32
I (635) wifi:Init static rx buffer size: 1600
I (635) wifi:Init static rx buffer num: 10
I (635) wifi:Init dynamic rx buffer num: 32
[0;32mI (645) wifi_init: rx ba win: 6[0m
[0;32mI (645) wifi_init: tcpip mbox: 32[0m
[0;32mI (645) wifi_init: udp mbox: 6[0m
[0;32mI (655) wifi_init: tcp mbox: 6[0m
[0;32mI (655) wifi_init: tcp tx win: 5760[0m
[0;32mI (665) wifi_init: tcp rx win: 5760[0m
[0;32mI (665) wifi_init: tcp mss: 1440[0m
[0;32mI (665) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (675) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (685) phy_init: phy_version 4791,2c4672b,Dec 20 2023,16:06:06[0m
I (765) wifi:mode : sta (44:17:93:5d:58:ac)
I (765) wifi:enable tsf
[0;32mI (775) example: wifi_init_sta finished.[0m
I (775) wifi:new:<5,1>, old:<1,0>, ap:<255,255>, sta:<5,1>, prof:1
I (785) wifi:state: init -> auth (b0)
I (785) wifi:state: auth -> assoc (0)
I (795) wifi:state: assoc -> run (10)
I (805) wifi:<ba-add>idx:0 (ifx:0, 30:23:03:c7:9f:8c), tid:0, ssn:0, winSize:64
I (825) wifi:connected with Group_5, aid = 5, channel 5, 40U, bssid = 30:23:03:c7:9f:8c
I (825) wifi:security: WPA2-PSK, phy: bgn, rssi: -45
I (835) wifi:pm start, type: 1

I (835) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us
I (905) wifi:AP's beacon interval = 102400 us, DTIM period = 1
[0;32mI (2345) esp_netif_handlers: sta ip: 192.168.1.13, mask: 255.255.255.0, gw: 192.168.1.1[0m
[0;32mI (2345) example: got ip:192.168.1.13[0m
[0;32mI (2345) example: connected to ap SSID:Group_5 password:smartsys[0m
[0;32mI (2355) example: Create timer and operator[0m
[0;32mI (2355) example: Connect timer and operator[0m
[0;32mI (2365) example: Create comparator and generator from the operator[0m
[0;32mI (2365) gpio: GPIO[4]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
[0;32mI (2375) gpio: GPIO[26]| InputEn: 0| OutputEn: 1| OpenDrain: 0| Pullup: 0| Pulldown: 0| Intr:0 [0m
[0;32mI (2385) example: Set generator action on timer and compare event[0m
[0;32mI (2395) example: Enable and start timer[0m
[0;32mI (6895) example: Message sent to server[0m
[0;32mI (9895) main_task: Returned from app_main()[0m
4
[0;32mI (17705) example: Received message from server: 4 or 4[0m
[0;32mI (17705) example: Message sent to server[0m
4
[0;32mI (18515) example: Received message from server: 4 or 4[0m
[0;32mI (18525) example: Message sent to server[0m
3
[0;32mI (18925) example: Received message from server: 3 or 3[0m
[0;32mI (18935) example: Message sent to server[0m
3
[0;32mI (19135) example: Received message from server: 3 or 3[0m
[0;32mI (19135) example: Message sent to server[0m
3
[0;32mI (19345) example: Received message from server: 3 or 3[0m
[0;32mI (19345) example: Message sent to server[0m
3
[0;32mI (19545) example: Received message from server: 3 or 3[0m
[0;32mI (19545) example: Message sent to server[0m
3
[0;32mI (19755) example: Received message from server: 3 or 3[0m
[0;32mI (19755) example: Message sent to server[0m
3
[0;32mI (19855) example: Received message from server: 3 or 3[0m
[0;32mI (19855) example: Message sent to server[0m
3
[0;32mI (20065) example: Received message from server: 3 or 3[0m
[0;32mI (20065) example: Message sent to server[0m
4
[0;32mI (20365) example: Received message from server: 4 or 4[0m
[0;32mI (20365) example: Message sent to server[0m
4
[0;32mI (20565) example: Received message from server: 4 or 4[0m
[0;32mI (20565) example: Message sent to server[0m
4
[0;32mI (20875) example: Received message from server: 4 or 4[0m
[0;32mI (20885) example: Message sent to server[0m
4
[0;32mI (21285) example: Received message from server: 4 or 4[0m
[0;32mI (21285) example: Message sent to server[0m
4
[0;32mI (21595) example: Received message from server: 4 or 4[0m
[0;32mI (21595) example: Message sent to server[0m
3
[0;32mI (22235) example: Received message from server: 3 or 3[0m
[0;32mI (22235) example: Message sent to server[0m
5
[0;32mI (23225) example: Received message from server: 5 or 5[0m
[0;32mI (23235) example: Message sent to server[0m
5
[0;32mI (24455) example: Received message from server: 5 or 5[0m
[0;32mI (24455) example: Message sent to server[0m
1
[0;32mI (25995) example: Received message from server: 1 or 1[0m
[0;32mI (25995) example: Message sent to server[0m
5
[0;32mI (27635) example: Received message from server: 5 or 5[0m
[0;32mI (27635) example: Message sent to server[0m
0
[0;32mI (29995) example: Received message from server: 0 or 0[0m
[0;32mI (29995) example: Message sent to server[0m
